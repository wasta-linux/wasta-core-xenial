#!/bin/bash

# ==============================================================================
# wasta-system-upgrade
#
#   2014-12-11 rik: Initial script
#   2015-01-22 rik: renamed to more generic 'wasta-system-upgrade'
#   2015-07-27 rik: modifiying to configure for Linux Mint 17.2 Rafaela
#   2015-08-13 rik: holding casper, ubiquity-casper: new version 1.340.2 will
#       cause remastersys to go to a login screen when booting the Live Session
#   2015-08-13 rik: removing casper, ubiquity-casper hold (solved casper
#       issues.
#   2015-08-21 rik: removing "remove-apps.sh" script.  User can do this
#       themselves if they want, but most probably won't want.
#   2015-10-25 rik: re-working for Ubuntu 15.10
#
# ==============================================================================

# ------------------------------------------------------------------------------
# Setup script to run with superuser permissions
# ------------------------------------------------------------------------------
if [ "$(whoami)" != "root" ]; then
    echo
    echo "This script needs to run with superuser permissions."
    echo "----------------------------------------------------"
    # below will return <blank> if user not in sudo group
    OUT=$(groups $(whoami) | grep "sudo")

    if [ "$OUT" ]; then
        # user has sudo permissions: use them to re-run the script
        echo && echo "If prompted, enter the sudo password."
        #re-run script with sudo
        sudo bash $0 $*
        LASTERRORLEVEL=$?
    else
        #user doesn't have sudo: limited user, so prompt for sudo user
        until [ "$OUT" ]; do
            echo && echo "Current user doesn't have sudo permissions." && echo
            read -p "Enter admin id (blank for root) to run this script:  " SUDO_ID

            # set SUDO_ID to root if nothing was entered
            if [ "$SUDO_ID" ]; then
                OUT=$(groups ${SUDO_ID} | grep "sudo")
            else
                SUDO_ID="root"
                # manually assign $OUT to anything because we will use root!
                OUT="root"
            fi
        done

        # re-run script with $SUDO_ID 
        echo
        echo "Enter password for $SUDO_ID (need to enter twice)."
        su --login $SUDO_ID -c "sudo bash ${DIR}/$(basename $0) $*"
        LASTERRORLEVEL=$?

        # give 2nd chance if entered pwd wrong (su doesn't give 2nd chance)
        if [ $LASTERRORLEVEL == 1 ]; then
            su --login $SUDO_ID -c "sudo bash ${DIR}/$(basename $0) $*"
            LASTERRORLEVEL=$?
        fi
    fi

    echo
    read -p "FINISHED:  Press <ENTER> to exit..."
    exit $LASTERRORLEVEL
fi

# ------------------------------------------------------------------------------
# Initial prompt
# ------------------------------------------------------------------------------
echo
echo "========================================================================="
echo "=== Wasta-Linux System Upgrade =========================================="
echo "========================================================================="
echo
echo "This script will upgrade all settings and default applications to match"
echo "  the Wasta-Linux defaults."
echo
echo "!!!Make sure Wasta-Offline is running if you want to use it!!!"
echo
echo "Close this window if you do not want to run this script."
echo
read -p "Press <Enter> to continue..."

# Setup Diretory for later reference
DIR=/usr/share/wasta-core

# ------------------------------------------------------------------------------
# Main Processing
# ------------------------------------------------------------------------------

echo
echo "*** Calling app-installs.sh script"
echo
bash $DIR/scripts/app-installs.sh
LASTERRORLEVEL=$?
if [ "$LASTERRORLEVEL" -ne "0" ];
then
    echo
    echo " *** ERROR in return from app-installs.sh. Exiting."
    echo
    exit 1
fi

echo
echo "*** Calling app-adjustments.sh script"
echo
bash $DIR/scripts/app-adjustments.sh
LASTERRORLEVEL=$?
if [ "$LASTERRORLEVEL" -ne "0" ];
then
    echo
    echo " *** ERROR in return from app-adjustments.sh. Exiting."
    echo
    exit 1
fi

# ------------------------------------------------------------------------------
# Finished
# ------------------------------------------------------------------------------

printf "\n\n\n\n\n\n"
echo "========================================================================="
echo "=== Script Finished ====================================================="
echo "========================================================================="

exit 0
